setwd(readClipboard())
require(dplyr)
require(sp)
require(gstat)
stem <- read.csv("dat_with_soil_updated.csv", stringsAsFactors = FALSE)
soil <- read.csv("MFP97_SoilData1990.csv", stringsAsFactors = FALSE)
# perform PCA of soil vars
require(vegan)
names(soil)
soil <- soil %>% select(PH, CA, MG, K)
# check for extreme outliers
par(mfrow=c(2, 2))
par(mar=rep(0.5, 4))
sapply(soil, hist)
par(mar=rep(1, 4))
sapply(soil, hist)
hist(soil$PH)
hist(soil$CA)
nrow(soil[soil$PH<4000,])
nrow(soil[soil$CA<4000,])
hist(soil[soil$CA<4000,]$CA)
hist(soil[soil$CA<=4000,]$CA)
# remove outliers
soil$CA <- ifelse(soil$CA>4000, NA, soil$CA)
soil <- soil[complete.cases(soil), ]
# scale variables before running pca
s_soil <- soil %>% mutate_all(funs(scale))
# run and plot pca
s_pca <- rda(s_soil)
biplot(s_pca,
display = c("sites",
"species"),
type = c("text",
"points"))
par(mfrow=c(1,1))
biplot(s_pca,
display = c("sites",
"species"),
type = c("text",
"points"))
s_pca
summary(s_pca)
# extract site scores for first axis
soil <- read.csv("MFP97_SoilData1990.csv", stringsAsFactors = FALSE)
soil$CA <- ifelse(soil$CA>4000, NA, soil$CA)
remove <- rownames(soil[!complete.cases(soil), ])
soil <- soil[complete.cases(soil), ]
PC1 <- data.frame(s_pca$CA$u[ , 1])
soil_dat <- cbind(soil[,c("X", "Y")], s_soil, PC1)
View(soil_dat)
View(PC1)
soil_dat <- cbind(soil[,c("X", "Y")], PC1)
names(soil_dat)[3] <- "cations"
# interpolate PC axes
stem <- read.csv("dat_with_soil_updated.csv", stringsAsFactors = FALSE)
coordinates(stem) <- ~X+Y
soil <- soil_dat
coordinates(soil) <- ~X+Y
View(soil)
View(soil_dat)
# PC1
plot(variogram(cations~1, soil))
v.cations <- variogram(cations~1, soil)
cations.fit <- fit.variogram(v.cations, vgm(psill = 0.002, "Exp", 40, nugget = 0.0005))
plot(v.cations, cations.fit, main= "cations, Exp model fit")
cations.fit <- fit.variogram(v.cations, vgm(psill = 0.002, "Sph", 40, nugget = 0.0005))
plot(v.cations, cations.fit, main= "cations, Exp model fit")
cations.fit <- fit.variogram(v.cations, vgm(psill = 0.002, "Gau", 40, nugget = 0.0005))
plot(v.cations, cations.fit, main= "cations, Exp model fit")
cations.fit <- fit.variogram(v.cations, vgm(psill = 0.002, "Exp", 40, nugget = 0.0005))
plot(v.cations, cations.fit, main= "cations, Exp model fit")
cations.fit
cations.kr <- krige(cations~1, soil, stem, model = cations.fit)
spplot(cations.kr["var1.pred"], colorkey = TRUE, col.regions = rev(heat.colors(100)),
main = "Kriged cations values")
spplot(cations.kr["var1.var"], colorkey = TRUE, col.regions = rev(heat.colors(100)),
main = "Kriged cations variance")
# add kriged PC axes to stem data
dat <- read.csv("dat_with_soil_updated.csv", stringsAsFactors = FALSE)
dim(cations.kr$var1.pred)
length(cations.kr$var1.pred)
cations <- data.frame(X = cations.kr@coords[,1], Y = cations.kr@coords[,2], pc1 = PC1.kr@data$var1.pred)
cations <- data.frame(X = cations.kr@coords[,1], Y = cations.kr@coords[,2], pc1 = cations.kr@data$var1.pred)
View(cations)
names(cations)[3] <- "cations"
dat <- cbind(dat, cations)
View(dat)
names(dat)
identical(dat[,1], dat[,36])
identical(dat[,2], dat[,37])
dat <- dat[,-c(36, 37)]
getwd()
write.csv(dat, "dat_with_soil_updated.csv", row.names = FALSE)
View(dat)
setwd(readClipboard())
names(dat)
require(c(lmerTest, lme4))
require(lmerTest)
require(lme4)
require(dplyr)
knitr::opts_chunk$set(echo = FALSE)
# Data setup
growth <- read.csv("dat_with_soil_updated.csv", stringsAsFactors = FALSE)
growth <- growth[!is.na(growth$growth),]  # only return rows for saplings that have a growth rate
growth <- growth[growth$growth<=1,]   # remove probable measurement errors
growth$growth <- ifelse(growth$growth<0, 0, growth$growth)   # convert negative growth rates to "0"
growth$BAc5_d <- growth$BAc5 / (pi*(5^2))
growth$BAh5_d <- growth$BAh5 / (pi*(5^2))
colnames(growth)[colnames(growth) == "alt"] <- "elev"
cations.null <- lmer(log(growth+1) ~ diam1 + cations +
(1|species),
REML = FALSE,
data = growth)
cations.add.het5 <- update(cations.null, .~. + BAh5_d)
cations.add.all5 <- update(cations.add.het5, .~. + BAc5_d)
cations.int.het5 <- update(cations.add.all5, .~. + BAh5_d*cations)
cations.int.all5 <- update(cations.int.het5, .~. + BAc5_d*cations)
anova(cations.null, cations.add.het5, cations.add.all5, cations.int.het5, cations.int.all5)
summary(cations.add.all5)
cations.add.het10 <- update(cations.null, .~. + BAh10_d)
growth$BAc10_d <- growth$BAc10 / (pi*(10^2))
growth$BAh10_d <- growth$BAh10 / (pi*(10^2))
cations.add.het10 <- update(cations.null, .~. + BAh10_d)
cations.add.all10 <- update(cations.add.het10, .~. + BAc10_d)
cations.int.het10 <- update(cations.add.all10, .~. + BAh10_d*cations)
cations.int.all10 <- update(cations.int.het10, .~. + BAc10_d*cations)
anova(cations.null, cations.add.het10, cations.add.all10, cations.int.het10, cations.int.all10)
growth$BAc15_d <- growth$BAc15 / (pi*(15^2))
growth$BAh15_d <- growth$BAh15 / (pi*(15^2))
cations.add.het15 <- update(cations.null, .~. + BAh15_d)
cations.add.all15 <- update(cations.add.het15, .~. + BAc15_d)
cations.int.het15 <- update(cations.add.all15, .~. + BAh15_d*cations)
cations.int.all15 <- update(cations.int.het15, .~. + BAc15_d*cations)
anova(cations.null, cations.add.het15, cations.add.all15, cations.int.het15, cations.int.all15)
anova(cations.int.all15, cations.add.all15)
summary(cations.int.all15)
growth$BAc20_d <- growth$BAc20 / (pi*(20^2))
growth$BAh20_d <- growth$BAh20 / (pi*(20^2))
cations.add.het20 <- update(cations.null, .~. + BAh20_d)
cations.add.all20 <- update(cations.add.het20, .~. + BAc20_d)
cations.int.het20 <- update(cations.add.all20, .~. + BAh20_d*cations)
cations.int.all20 <- update(cations.int.het20, .~. + BAc20_d*cations)
anova(cations.null, cations.add.het20, cations.add.all20, cations.int.het20, cations.int.all20)
